<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#include "/macro.include"/>
<#assign className = table.className>
<#assign classNameFirstLower = table.classNameFirstLower>
<#macro namespace>${className}.</#macro>

<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="${mapperPackage}.${className}Mapper">

	<!-- 类映射 -->
	<resultMap id="RM_${className}" type="${pojoPackage}.${className}">
		<#list table.columns as column>
		<result property="${column.columnNameLower}" column="${column.sqlName}" jdbcType="${column.jdbcType}" />
		</#list>
	</resultMap>

	<!-- 用于select查询公用的列 -->
	<sql id="columns">
	    <![CDATA[
		<#list table.columns as column>${column.sqlName}<#if column_has_next>,</#if></#list>
	    ]]>
	</sql>

	<!-- 用于select查询公用的条件  -->
	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
			<#list table.columns as column>
			<#if column.isDateColumn>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}Begin)">
				AND ${column.sqlName} >= <@mapperEl column.columnNameFirstLower+"Begin" + ',jdbcType=' + column.jdbcType/>
			</if>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower}End)">
				AND ${column.sqlName} &lt;= <@mapperEl column.columnNameFirstLower+"End" + ',jdbcType=' + column.jdbcType/>
			</if>
			<#else>
			<if test="@Ognl@isNotEmpty(${column.columnNameFirstLower})">
				AND ${column.sqlName} = <@mapperEl column.columnNameFirstLower + ',jdbcType=' + column.jdbcType/>
			</if>
			</#if>
			</#list>
		</where>
	</sql>
	
	<!-- 插入-->
	<insert id="insert" useGeneratedKeys="true" keyProperty="${table.idColumn.columnNameFirstLower}">
		INSERT INTO ${table.sqlName}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<#list table.compositeIdColumns as column>
			${column.sqlName},
			</#list>
			<#list table.notPkColumns as column>
			<if test="${column.columnNameFirstLower} != null">
				${column.sqlName},
			</if>
			</#list>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<#list table.compositeIdColumns as column>
			<@mapperEl column.columnNameLower/>,
			</#list>
			<#list table.notPkColumns as column>
			<if test="${column.columnNameFirstLower} != null">
				<@mapperEl column.columnNameFirstLower + ',jdbcType=' + column.jdbcType/>,
			</if>
			</#list>
		</trim>
	</insert>

	<!-- 修改 -->
	<update id="update">
		UPDATE ${table.sqlName}
		<set>
			<#list table.notPkColumns as column>
			<if test="${column.columnNameFirstLower} != null">
				${column.sqlName} = <@mapperEl column.columnNameFirstLower + ',jdbcType=' + column.jdbcType/> <#if column_has_next>,</#if>
			</if>
			</#list>
		</set>
		WHERE
		<#list table.compositeIdColumns as column>
		${column.sqlName} = <@mapperEl column.columnNameLower + ',jdbcType=' + column.jdbcType/> <#if column_has_next> AND </#if>
		</#list>
	</update>

	<!-- 删除 -->
	<delete id="delete">
	    <![CDATA[
	        DELETE FROM ${table.sqlName} WHERE
	        <#list table.compositeIdColumns as column>
	        ${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if>
			</#list>
	    ]]>
	</delete>


	<!-- 根据主键获取 -->
	<select id="get" resultMap="RM_${className}">
		SELECT
		<include refid="columns" />
	    <![CDATA[
		    FROM ${table.sqlName} 
	        WHERE 
				<#list table.compositeIdColumns as column>
		        ${column.sqlName} = <@mapperEl column.columnNameLower/> <#if column_has_next> AND </#if>
		        </#list>    
	    ]]>
	</select>

	<!-- 统计 -->
	<select id="count" resultType="java.lang.Integer">
		SELECT count(*) FROM ${table.sqlName}
		<include refid="where" />
	</select>
	

	<!-- 查询 -->
	<select id="query" resultMap="RM_${className}">
		SELECT
		<include refid="columns" />
		FROM ${table.sqlName}
		<include refid="where" />
		<if test="sortColumns != null">
			ORDER BY <@jspEl 'sortColumns'/>
		</if>
	</select>

	<#list table.columns as column>
	<#if column.unique && !column.pk>
	<select id="getBy${column.columnName}" resultMap="RM_${className}" parameterType="${column.javaType}">
		SELECT
		<include refid="columns" />
	    <![CDATA[
	        FROM ${table.sqlName} where ${column.sqlName} = <@mapperEl column.columnNameLower/>
	    ]]>
	</select>
	
	</#if>
	</#list>
</mapper>

