<#-- 生成java字段-->
<#macro generateFields>
	<#list table.columns as column>
	/** 
	 * ${column.sqlName} ${column.columnAlias!} 
	 */
	private ${(column.javaType?contains("Timestamp")||column.javaType?contains("Time"))?string("Date",column.javaType)} ${column.columnNameLower};
	
	</#list>
</#macro>

<#-- 生成java构造函数 -->
<#macro generateConstructor constructor>
	public ${constructor}(){
	}

	public ${constructor}(
	<#list table.compositeIdColumns as column>
		${column.javaType} ${column.columnNameLower}<#if column_has_next>,</#if>
	</#list>
	){
	<#list table.compositeIdColumns as column>
		<#if column.pk>
		this.${column.columnNameLower} = ${column.columnNameLower};
		</#if>
	</#list>	
	}
</#macro>

<#-- 生成java属性方法 -->
<#macro generateJavaColumns>
	<#list table.columns as column>
	<#if column.isDateColumn>
	public void set${column.columnName}(Date value) {
		this.${column.columnNameLower} = value;
	}
	
	public Date get${column.columnName}() {
		return this.${column.columnNameLower};
	}
	
	public String get${column.columnName}Str() {
		return DateHelper.format(get${column.columnName}(), ${column.isDateTimeColumn?string("DATETIME_PATTERN","DATE_PATTERN")});
	}
	
	public void set${column.columnName}Str(String value) {
		set${column.columnName}(DateHelper.parse(value, ${column.isDateTimeColumn?string("DATETIME_PATTERN","DATE_PATTERN")}));
	}
	
	<#else>
	public void set${column.columnName}(${column.javaType} value) {
		this.${column.columnNameLower} = value;
	}
	
	public ${column.javaType} get${column.columnName}() {
		return this.${column.columnNameLower};
	}
	
	</#if>
	</#list>
</#macro>

<#-- 生成一对多关系 -->
<#macro generateJavaOneToMany>
	<#list table.exportedKeys.associatedTables?values as foreignKey>
	<#assign fkSqlTable = foreignKey.sqlTable>
	<#assign fkTable    = fkSqlTable.className>
	<#assign fkPojoClass = fkSqlTable.className>
	<#assign fkPojoClassVar = fkPojoClass?uncap_first>
	
	private Set ${fkPojoClassVar}s = new HashSet(0);
	public void set${fkPojoClass}s(Set<${fkPojoClass}> ${fkPojoClassVar}){
		this.${fkPojoClassVar}s = ${fkPojoClassVar};
	}
	
	public Set<${fkPojoClass}> get${fkPojoClass}s() {
		return ${fkPojoClassVar}s;
	}
	</#list>
</#macro>

<#-- 生成多对一关系 -->
<#macro generateJavaManyToOne>
	<#list table.importedKeys.associatedTables?values as foreignKey>
	<#assign fkSqlTable = foreignKey.sqlTable>
	<#assign fkTable    = fkSqlTable.className>
	<#assign fkPojoClass = fkSqlTable.className>
	<#assign fkPojoClassVar = fkPojoClass?uncap_first>
	
	private ${fkPojoClass} ${fkPojoClassVar};
	
	public void set${fkPojoClass}(${fkPojoClass} ${fkPojoClassVar}){
		this.${fkPojoClassVar} = ${fkPojoClassVar};
	}
	
	public ${fkPojoClass} get${fkPojoClass}() {
		return ${fkPojoClassVar};
	}
	</#list>
</#macro>